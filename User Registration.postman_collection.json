{
	"info": {
		"_postman_id": "afad3d6f-42d9-49ac-8f4f-f00f336048a4",
		"name": "User Registration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2722643",
		"_collection_link": "https://martian-zodiac-928539.postman.co/workspace/Learnings~e1d5531e-4820-4b93-adf2-c6089e0ccf85/collection/2722643-afad3d6f-42d9-49ac-8f4f-f00f336048a4?action=share&source=collection_link&creator=2722643"
	},
	"item": [
		{
			"name": "users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userJwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "me",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userJwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/me",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable('userJwt', token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"sarav@sarav.com\",\r\n    \"password\" : \"password3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"saravanan12@sarav.com\",\n    \"password\":\"password3\",\n    \"fullName\":\"Saravanan Vaiyapuri\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "images for given user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userJwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/images",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "image/{id}",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userJwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/image/{{imageHash}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"image",
						"{{imageHash}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Image Upload",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"clientId\", \"b3c655b45780859\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// This endpoint is critical to the test flow, ",
							"// so this stops the request cycle if any of these tests error.",
							"postman.setNextRequest('end');",
							"",
							"var res = JSON.parse(responseBody);",
							"",
							"var imageHash = res.id;",
							"",
							"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
							"",
							"",
							"postman.setEnvironmentVariable('imageHash', imageHash);",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userJwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Client-ID {{clientId}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"description": "image/video",
							"type": "file",
							"src": "/Users/v_saravanan/Desktop/Screenshot 2024-10-24 at 2.56.02â€¯PM.png"
						},
						{
							"key": "type",
							"value": "file",
							"description": "file, url, base64, raw",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Simple upload DVM for 1st user",
							"description": "The title of the content ",
							"type": "text"
						},
						{
							"key": "description",
							"value": "1st user 2nd image",
							"description": "The description of the content ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"upload"
					]
				},
				"description": "Upload a new image or video.\n\n#### Accepted Image Formats\n\n| MIME Type |\n| --- |\n| image/jpeg |\n| image/jpg |\n| image/gif |\n| image/png |\n| image/apng |\n| image/tiff |\n\n#### Accepted Video Formats\n\n| MIME Type |\n| --- |\n| video/mp4 |\n| video/webm |\n| video/x-matroska |\n| video/quicktime |\n| video/x-flv |\n| video/x-msvideo |\n| video/x-ms-wmv |\n| video/mpeg |"
			},
			"response": []
		}
	]
}